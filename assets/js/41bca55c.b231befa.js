"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1033],{4856:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"Modules/command_meta.chain","title":"command_meta.chain","description":"Overview","source":"@site/docs/02-Modules/command_meta.chain.md","sourceDirName":"02-Modules","slug":"/Modules/command_meta.chain","permalink":"/Modules/command_meta.chain","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-Modules/command_meta.chain.md","tags":[],"version":"current","frontMatter":{"title":"command_meta.chain"},"sidebar":"documentSidebar","previous":{"title":"command_meta.attachment","permalink":"/Modules/command_meta.attachment"},"next":{"title":"command_meta.delay","permalink":"/Modules/command_meta.delay"}}');var i=c(4848),d=c(8453);const a={title:"command_meta.chain"},o="Module: command_meta.chain",r={},t=[{value:"Overview",id:"overview",level:2},{value:"Color Boxes",id:"color-boxes",level:2},{value:"Commands",id:"commands",level:2}];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"module-command_metachain",children:"Module: command_meta.chain"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.admonition,{type:"module",children:(0,i.jsxs)(n.p,{children:["Provides ",(0,i.jsx)(n.code,{children:"/chain"})," command.\nIt allows you to run another 2 commands.\nThe first command is ",(0,i.jsx)(n.code,{children:"any command"}),".\nThe second command is ",(0,i.jsx)(n.code,{children:"the chain command"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"color-boxes",children:"Color Boxes"}),"\n",(0,i.jsxs)(n.admonition,{type:"colorbox-note",children:[(0,i.jsxs)(n.p,{children:["\u25c9 What is the purpose of ",(0,i.jsx)(n.code,{children:"/chain"})," command?"]}),(0,i.jsxs)(n.p,{children:["Its typical use-case is to ",(0,i.jsx)(n.code,{children:"condense"})," two commands into one command."]}),(0,i.jsxs)(n.p,{children:["So that you can put ",(0,i.jsx)(n.code,{children:"more than 1 command"})," in some places."]}),(0,i.jsxs)(n.p,{children:["For example: ",(0,i.jsx)(n.code,{children:"/execute run chain say 1 chain say 2"})]}),(0,i.jsxs)(n.p,{children:["\u25c9 The ",(0,i.jsx)(n.code,{children:"return value"})," of a vanilla Minecraft command."]}),(0,i.jsxs)(n.p,{children:["In vanilla Minecraft, the ",(0,i.jsx)(n.code,{children:"return value"})," of a command, is a ",(0,i.jsx)(n.code,{children:"integer"}),"."]}),(0,i.jsxs)(n.p,{children:["If integer less than zero, it's ",(0,i.jsx)(n.code,{children:"failed"}),"."]}),(0,i.jsxs)(n.p,{children:["If integer equals zero, it's ",(0,i.jsx)(n.code,{children:"passed"}),"."]}),(0,i.jsxs)(n.p,{children:["If integer grater than zero, it's ",(0,i.jsx)(n.code,{children:"success"}),"."]}),(0,i.jsx)(n.p,{children:"So, we can know whether a command was executed successfully or not, based on the return value of that command."}),(0,i.jsxs)(n.p,{children:["\u25c9 How the ",(0,i.jsx)(n.code,{children:"/chain"})," command works?"]}),(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"/chain"})," command takes ",(0,i.jsx)(n.code,{children:"exactly one argument"}),", whose type is ",(0,i.jsx)(n.code,{children:"greedy string"}),"."]}),(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"greedy string"})," argument type is always be ",(0,i.jsx)(n.code,{children:"the last"})," argument of a command."]}),(0,i.jsxs)(n.p,{children:["Once the ",(0,i.jsx)(n.code,{children:"command parser"})," sees a ",(0,i.jsx)(n.code,{children:"greedy string"})," argument type, it knows this is ",(0,i.jsx)(n.code,{children:"the last"})," argument."]}),(0,i.jsxs)(n.p,{children:["So the parser will ",(0,i.jsx)(n.code,{children:"feed"})," the ",(0,i.jsx)(n.code,{children:"greedy string argument"})," all the remaining characters."]}),(0,i.jsxs)(n.p,{children:["In other words, a ",(0,i.jsx)(n.code,{children:"greedy string argument"})," will ",(0,i.jsx)(n.code,{children:"eat"})," all the remaining characters that are still not be consumed by preceding arguments."]}),(0,i.jsxs)(n.p,{children:["For example, the ",(0,i.jsx)(n.code,{children:"/say Hello Alice"})," also has exactly one argument, whose type is ",(0,i.jsx)(n.code,{children:"greedy string"}),"."]}),(0,i.jsxs)(n.p,{children:["You didn't need to use ",(0,i.jsx)(n.code,{children:'"'})," character to escape the ",(0,i.jsx)(n.code,{children:"space character"}),", this is because the argument type of ",(0,i.jsx)(n.code,{children:"/say"})," is ",(0,i.jsx)(n.code,{children:"greedy string"}),"."]}),(0,i.jsxs)(n.p,{children:["Take ",(0,i.jsx)(n.code,{children:"/chain say 1 chain say 2"})," as an example:"]}),(0,i.jsxs)(n.p,{children:["The first ",(0,i.jsx)(n.code,{children:"/chain"})," command will receive the ",(0,i.jsx)(n.code,{children:"say 1 chain say 2"})," as the value of ",(0,i.jsx)(n.code,{children:"its first and only argument"}),"."]}),(0,i.jsxs)(n.p,{children:["Then the ",(0,i.jsx)(n.code,{children:"/chain"})," command will split the value into two parts."]}),(0,i.jsxs)(n.p,{children:["The first part is ",(0,i.jsx)(n.code,{children:"say 1"}),", and the ",(0,i.jsx)(n.code,{children:"/chain"})," command will submit it to the ",(0,i.jsx)(n.code,{children:"command executor"}),"."]}),(0,i.jsxs)(n.p,{children:["The second part is ",(0,i.jsx)(n.code,{children:"chain say 2"}),", and the ",(0,i.jsx)(n.code,{children:"/chain"})," command will decide whether to submit it ",(0,i.jsx)(n.code,{children:"based on"})," the return value of ",(0,i.jsx)(n.code,{children:"the previous submitted command"}),"."]}),(0,i.jsx)(n.p,{children:"It's a recursive process."})]}),"\n",(0,i.jsxs)(n.admonition,{type:"colorbox-example",children:[(0,i.jsx)(n.p,{children:"\u25c9 A nested chain"}),(0,i.jsxs)(n.p,{children:["Issue: ",(0,i.jsx)(n.code,{children:"/chain say 1 chain say 2 chain say 3"})]}),(0,i.jsx)(n.p,{children:"\u25c9 A breakable chain"}),(0,i.jsxs)(n.p,{children:["Issue: ",(0,i.jsx)(n.code,{children:"/chain bad command here chain say 2"})]}),(0,i.jsx)(n.p,{children:"\u25c9 Use chain command with predicate command"}),(0,i.jsxs)(n.p,{children:["Issue: ",(0,i.jsx)(n.code,{children:"/run as player Alice chain test-level-perm %player:name% 4 chain say value is true"})]}),(0,i.jsxs)(n.p,{children:["\u25c9 Leverage the ",(0,i.jsx)(n.code,{children:"/execute if"})," command."]}),(0,i.jsxs)(n.p,{children:["Issue: ",(0,i.jsx)(n.code,{children:'/chain execute if block ~ ~-1 ~ minecraft:diamond_block if entity @s[nbt={Inventory:[{id:"minecraft:diamond"}]}] chain say You are standing on diamond block and have diamond.'})]}),(0,i.jsxs)(n.p,{children:["NOTE: This use-case is similar to ",(0,i.jsx)(n.code,{children:"command_meta.if"})," module."]})]}),"\n",(0,i.jsx)(n.h2,{id:"commands",children:"Commands"}),"\n",(0,i.jsx)(n.admonition,{type:"command",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Command Syntax: ",(0,i.jsx)(n.code,{children:"/chain <GreedyString rest>"})]}),"\n",(0,i.jsx)(n.li,{children:"Document: Chain commands and executes them in sequence, the chain will break if the previous one command fails."}),"\n",(0,i.jsxs)(n.li,{children:["Can be executed by console: ",(0,i.jsx)(n.code,{children:"true"})]}),"\n",(0,i.jsxs)(n.li,{children:["Required Level Permission: ",(0,i.jsx)(n.code,{children:"4"})]}),"\n",(0,i.jsxs)(n.li,{children:["Required String Permission: ",(0,i.jsx)(n.code,{children:"null"})]}),"\n"]})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,c)=>{c.d(n,{R:()=>a,x:()=>o});var s=c(6540);const i={},d=s.createContext(i);function a(e){const n=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);